# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Canonical Ltd.
name: smoke
on:
    push:
        branches: ["main"]
    pull_request:
        paths:
            - ".github/workflows/spread.yaml"
            - "bin/*"
            - "spread.yaml"
            - "spread/*.sh"
            - "tests/**"
    workflow_dispatch:
        inputs:
            snapd-risk-level:
                description: "Store risk level of the snapd snap"
                type: choice
                default: beta
                required: true
                options:
                    - stable
                    - candidate
                    - beta
                    - edge
            lxd-risk-level:
                description: "Store risk level of the LXD snap"
                type: choice
                default: candidate
                required: true
                options:
                    - stable
                    - candidate
                    - beta
                    - edge
            maas-risk-level:
                description: "Store risk level of the MAAS snap"
                type: choice
                default: candidate
                required: true
                options:
                    - stable
                    - candidate
                    - beta
                    - edge
            snapcraft-risk-level:
                description: "Store risk level of the snapcraft snap"
                type: choice
                default: stable
                required: true
                options:
                    - stable
                    - candidate
                    - beta
                    - edge
            docker-risk-level:
                description: "Store risk level of the docker snap"
                type: choice
                default: stable
                required: true
                options:
                    - stable
                    - candidate
                    - beta
                    - edge
            image-garden-channel:
                description: "Store channel of the image-garden snap"
                type: string
                default: "latest/edge"
                required: true
jobs:
    canary:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              # This is essential for git restore-mtime to work correctly.
              with:
                fetch-depth: 0
            - name: Cache downloaded snaps
              uses: actions/cache@v4
              with:
                path: .image-garden/cache-*/snaps
                key: snaps
            - name: Set environment variables for spread
              run: |
                # Export variables that spread picks up from the host.
                echo X_SPREAD_SNAPD_RISK_LEVEL="${{ inputs.snapd-risk-level || 'beta' }}" >> $GITHUB_ENV
                echo X_SPREAD_LXD_RISK_LEVEL="${{ inputs.lxd-risk-level || 'candidate' }}" >> $GITHUB_ENV
                echo X_SPREAD_MAAS_RISK_LEVEL="${{ inputs.maas-risk-level || 'candidate' }}" >> $GITHUB_ENV
                echo X_SPREAD_SNAPCRAFT_RISK_LEVEL="${{ inputs.snapcraft-risk-level || 'stable' }}" >> $GITHUB_ENV
                echo X_SPREAD_DOCKER_RISK_LEVEL="${{ inputs.docker-risk-level || 'stable' }}" >> $GITHUB_ENV
            - name: Run integration tests
              uses: zyga/image-garden-action@d44ef66b28e181e441fc3e8db871018df40b62d3
              with:
                snapd-channel: latest/edge
                garden-system: ubuntu-cloud-24.04
                image-garden-channel: ${{ inputs.image-garden-channel || 'latest/edge' }}
                spread-artifacts: artifacts
                spread-artifacts-suffix: ubuntu-cloud-24.04
    test:
        runs-on: ubuntu-latest
        needs: canary
        strategy:
            fail-fast: false
            matrix:
                garden-system:
                    - almalinux-cloud-8
                    - amazonlinux-cloud-2
                    - amazonlinux-cloud-2023
                    - archlinux-cloud
                    - centos-cloud-10
                    - centos-cloud-9
                    - debian-cloud-11
                    - debian-cloud-12
                    - debian-cloud-13
                    - debian-cloud-sid
                    - fedora-cloud-41
                    - fedora-cloud-42
                    - opensuse-cloud-tumbleweed-apparmor
                    - opensuse-cloud-tumbleweed-selinux
                    - oracle-cloud-8
                    - rocky-cloud-8
                    - ubuntu-cloud-20.04
                    - ubuntu-cloud-22.04
                    # This is duplicating the canary job.
                    # - ubuntu-cloud-24.04
                    - ubuntu-cloud-25.04
                    - ubuntu-cloud-25.10
        steps:
            - name: Checkout code
              uses: actions/checkout@v5
              # This is essential for git restore-mtime to work correctly.
              with:
                fetch-depth: 0
            - name: Restore cache of downloaded snaps
              uses: actions/cache/restore@v4
              with:
                path: .image-garden/cache-*/snaps
                key: snaps
            - name: Set environment variables for spread
              run: |
                # Export variables that spread picks up from the host.
                echo X_SPREAD_SNAPD_RISK_LEVEL="${{ inputs.snapd-risk-level || 'beta' }}" >> $GITHUB_ENV
                echo X_SPREAD_LXD_RISK_LEVEL="${{ inputs.lxd-risk-level || 'candidate' }}" >> $GITHUB_ENV
                echo X_SPREAD_MAAS_RISK_LEVEL="${{ inputs.maas-risk-level || 'candidate' }}" >> $GITHUB_ENV
                echo X_SPREAD_SNAPCRAFT_RISK_LEVEL="${{ inputs.snapcraft-risk-level || 'stable' }}" >> $GITHUB_ENV
                echo X_SPREAD_DOCKER_RISK_LEVEL="${{ inputs.docker-risk-level || 'stable' }}" >> $GITHUB_ENV
            - name: Run integration tests
              uses: zyga/image-garden-action@d44ef66b28e181e441fc3e8db871018df40b62d3
              with:
                snapd-channel: latest/edge
                image-garden-channel: ${{ inputs.image-garden-channel || 'latest/edge' }}
                garden-system: ${{ matrix.garden-system }}
                cache-prepared-images: ${{ matrix.garden-system == 'archlinux-cloud' }}
                spread-artifacts: artifacts
                spread-artifacts-suffix: ${{ matrix.garden-system }}
